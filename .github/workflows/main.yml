name: Release application

on:
  push:
    branches:
      - '**'   # run for all branches (main + feature branches)

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-c
  REGISTRY: europe-north1-docker.pkg.dev
  REPOSITORY: todo-repository
  IMAGE: todo-app
  SERVICE: todo-backend
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud
        run: gcloud --quiet auth configure-docker $REGISTRY

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          project_id: ${{ env.PROJECT_ID }}


      - name: Form image tag
        run: echo "IMAGE_TAG=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ env.BRANCH }}-${GITHUB_SHA}" >> $GITHUB_ENV


      - name: Build Docker image
        run: docker build -t $IMAGE_TAG ./todo_app

      - name: Push Docker image
        run: docker push $IMAGE_TAG

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy to GKE (per-branch environment)
        run: |
          # Determine namespace (main → project)
          if [ "${{ env.BRANCH }}" = "main" ]; then
            NAMESPACE="project"
          else
            NAMESPACE="${{ env.BRANCH }}"
          fi

          echo "➡️ Using namespace: $NAMESPACE"

          # Ensure namespace exists
          kubectl get namespace $NAMESPACE || kubectl create namespace $NAMESPACE

          # Switch kubectl context
          kubectl config set-context --current --namespace=$NAMESPACE

          # Move to manifests directory
          cd todo_app/manifests

          # Update image and namespace in Kustomize
          kustomize edit set namespace $NAMESPACE
          kustomize edit set image $REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE=$IMAGE_TAG

          # Apply and verify deployment
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$SERVICE -n $NAMESPACE

          # List deployed services
          kubectl get services -n $NAMESPACE -o wide
